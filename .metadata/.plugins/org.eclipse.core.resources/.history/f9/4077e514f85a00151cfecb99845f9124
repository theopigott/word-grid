import java.util.ArrayList;
import java.util.Iterator;


public class Square {
	// Position
	private int x;
	private int y;
	// Letter
	private char c;
	// Next Square when traversing grid
	Square next;
	// Visited Square in current word?
	boolean visited;
	
	public Square(int x, int y, char c) {
		this.x = x;
		this.y = y;
		this.c = c;
		this.visited = false;
	}
	
	public void search(String root, ArrayList<String> words, WordChecker dict, int minLength) {
		String s = root + c;
		int result = dict.lookup(s);
		if (result == 1 && s.length() > minLength) {
			words.add(s);
		}
		else if (result == 2) {
			visited = true;
			for (Square square : neighbours()) {
				if (square.visited) continue;
				square.search(s, words, dict, minLength);
			}
			visited = false;
		}
	}
	
    public Iterator<Square> neighbours() {
        return new SquareIterator();
    }

    private class SquareIterator implements Iterator<Square> {
        private int i;

        public SquareIterator() {
        	Random rand = new Random();
            for (int i = N - 1; i > 0; i--) {
            	int index = rand.nextInt(i + 1);
            	Item item = a[index];
            	a[index] = a[i];
            	a[i] = item;
            }
            i = N-1;
        }

        public boolean hasNext() {
            return i >= 0;
        }

        public void remove() {
            throw new UnsupportedOperationException();
        }

        public Item next() {
            if (!hasNext()) throw new NoSuchElementException();
            return a[i--];
        }
    }
	
	// Getters and setters
	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	public char getLetter() {
		return c;
	}

	public void setLetter(char c) {
		this.c = c;
	}

	public Square getNext() {
		return next;
	}

	public void setNext(Square next) {
		this.next = next;
	}

	public boolean isVisited() {
		return visited;
	}

	public void setVisited(boolean visited) {
		this.visited = visited;
	}
	
	
	
}
